services:
  conferences:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile
#    command: sleep 9999 # uvicorn main:app --host 0.0.0.0 --reload # sleep 9999999999
    command: python main.py 
    env_file:
    - .env
    volumes:
#      - opencon-logs:/var/log/opencon
      - /var/log/opencon:/var/log/opencon
      
      - ./src/conferences:/conferences
      - ./src/migrations:/migrations
      - ./src/tests/assets/:/tests/assets/
      - ./src/shared:/shared
      - ./src/main.py:/main.py
    ports:
    - 8000:8000
#    healthcheck:
#      test: curl --fail http://localhost:8000/openapi.json || exit 1
#      interval: 5s
#      retries: 3
#      start_period: 5s
#      timeout: 5s
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      redis:
        condition: service_started
#      postgres:
#        condition: service_started
  
  push_notifications:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile
    command: python workers/push_notifications.py
    env_file:
    - .env
    volumes:
      - ./src/workers:/workers
      - opencon-logs:/var/log/opencon
    depends_on:
      redis:
        condition: service_started
#      postgres:
#        condition: service_started
#      conferences:
#        condition: service_healthy

#  postgres:
#    image: "postgres:14-alpine"
#    environment:
#      POSTGRES_DB: sfscon
#      POSTGRES_USER: sfscon
#      POSTGRES_PASSWORD: sfscon
#    hostname: postgres
#    volumes:
#      - postgres-data:/var/lib/postgresql/data

  redis:
    command: redis-server
    hostname: redis
    image: redis:alpine
    labels:
      NAME: redis
    ports:
    - 6379:6379


volumes:
  opencon-logs:
  postgres-data:
